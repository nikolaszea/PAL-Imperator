{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insert = exports.search = void 0;\n/**\n * Return the index of the element at or before the given property\n * @hidden\n */\nfunction search(array, value, prop) {\n  if (prop === void 0) {\n    prop = \"ticks\";\n  }\n  var beginning = 0;\n  var len = array.length;\n  var end = len;\n  if (len > 0 && array[len - 1][prop] <= value) {\n    return len - 1;\n  }\n  while (beginning < end) {\n    // calculate the midpoint for roughly equal partition\n    var midPoint = Math.floor(beginning + (end - beginning) / 2);\n    var event_1 = array[midPoint];\n    var nextEvent = array[midPoint + 1];\n    if (event_1[prop] === value) {\n      // choose the last one that has the same value\n      for (var i = midPoint; i < array.length; i++) {\n        var testEvent = array[i];\n        if (testEvent[prop] === value) {\n          midPoint = i;\n        }\n      }\n      return midPoint;\n    } else if (event_1[prop] < value && nextEvent[prop] > value) {\n      return midPoint;\n    } else if (event_1[prop] > value) {\n      // search lower\n      end = midPoint;\n    } else if (event_1[prop] < value) {\n      // search upper\n      beginning = midPoint + 1;\n    }\n  }\n  return -1;\n}\nexports.search = search;\n/**\n * Does a binary search to insert the note\n * in the correct spot in the array\n * @hidden\n */\nfunction insert(array, event, prop) {\n  if (prop === void 0) {\n    prop = \"ticks\";\n  }\n  if (array.length) {\n    var index = search(array, event[prop], prop);\n    array.splice(index + 1, 0, event);\n  } else {\n    array.push(event);\n  }\n}\nexports.insert = insert;","map":{"version":3,"names":["search","array","value","prop","beginning","len","length","end","midPoint","Math","floor","event_1","nextEvent","i","testEvent","exports","insert","event","index","splice","push"],"sources":["/Users/niko/Documents/PAL-Imperator/node_modules/@tonejs/midi/src/BinarySearch.ts"],"sourcesContent":["/**\n * Return the index of the element at or before the given property\n * @hidden\n */\nexport function search(array: any[], value: any, prop = \"ticks\"): number {\n\tlet beginning = 0;\n\tconst len = array.length;\n\tlet end = len;\n\tif (len > 0 && array[len - 1][prop] <= value) {\n\t\treturn len - 1;\n\t}\n\twhile (beginning < end) {\n\t\t// calculate the midpoint for roughly equal partition\n\t\tlet midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\tconst event = array[midPoint];\n\t\tconst nextEvent = array[midPoint + 1];\n\t\tif (event[prop] === value) {\n\t\t\t// choose the last one that has the same value\n\t\t\tfor (let i = midPoint; i < array.length; i++) {\n\t\t\t\tconst testEvent = array[i];\n\t\t\t\tif (testEvent[prop] === value) {\n\t\t\t\t\tmidPoint = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midPoint;\n\t\t} else if (event[prop] < value && nextEvent[prop] > value) {\n\t\t\treturn midPoint;\n\t\t} else if (event[prop] > value) {\n\t\t\t// search lower\n\t\t\tend = midPoint;\n\t\t} else if (event[prop] < value) {\n\t\t\t// search upper\n\t\t\tbeginning = midPoint + 1;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Does a binary search to insert the note\n * in the correct spot in the array\n * @hidden\n */\nexport function insert(array: any[], event: object, prop = \"ticks\"): void {\n\tif (array.length) {\n\t\tconst index = search(array, event[prop], prop);\n\t\tarray.splice(index + 1, 0, event);\n\t} else {\n\t\tarray.push(event);\n\t}\n}\n"],"mappings":";;;;;;AAAA;;;;AAIA,SAAgBA,MAAMA,CAACC,KAAY,EAAEC,KAAU,EAAEC,IAAc;EAAd,IAAAA,IAAA;IAAAA,IAAA,UAAc;EAAA;EAC9D,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAM;EACxB,IAAIC,GAAG,GAAGF,GAAG;EACb,IAAIA,GAAG,GAAG,CAAC,IAAIJ,KAAK,CAACI,GAAG,GAAG,CAAC,CAAC,CAACF,IAAI,CAAC,IAAID,KAAK,EAAE;IAC7C,OAAOG,GAAG,GAAG,CAAC;;EAEf,OAAOD,SAAS,GAAGG,GAAG,EAAE;IACvB;IACA,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACN,SAAS,GAAG,CAACG,GAAG,GAAGH,SAAS,IAAI,CAAC,CAAC;IAC5D,IAAMO,OAAK,GAAGV,KAAK,CAACO,QAAQ,CAAC;IAC7B,IAAMI,SAAS,GAAGX,KAAK,CAACO,QAAQ,GAAG,CAAC,CAAC;IACrC,IAAIG,OAAK,CAACR,IAAI,CAAC,KAAKD,KAAK,EAAE;MAC1B;MACA,KAAK,IAAIW,CAAC,GAAGL,QAAQ,EAAEK,CAAC,GAAGZ,KAAK,CAACK,MAAM,EAAEO,CAAC,EAAE,EAAE;QAC7C,IAAMC,SAAS,GAAGb,KAAK,CAACY,CAAC,CAAC;QAC1B,IAAIC,SAAS,CAACX,IAAI,CAAC,KAAKD,KAAK,EAAE;UAC9BM,QAAQ,GAAGK,CAAC;;;MAGd,OAAOL,QAAQ;KACf,MAAM,IAAIG,OAAK,CAACR,IAAI,CAAC,GAAGD,KAAK,IAAIU,SAAS,CAACT,IAAI,CAAC,GAAGD,KAAK,EAAE;MAC1D,OAAOM,QAAQ;KACf,MAAM,IAAIG,OAAK,CAACR,IAAI,CAAC,GAAGD,KAAK,EAAE;MAC/B;MACAK,GAAG,GAAGC,QAAQ;KACd,MAAM,IAAIG,OAAK,CAACR,IAAI,CAAC,GAAGD,KAAK,EAAE;MAC/B;MACAE,SAAS,GAAGI,QAAQ,GAAG,CAAC;;;EAG1B,OAAO,CAAC,CAAC;AACV;AAhCAO,OAAA,CAAAf,MAAA,GAAAA,MAAA;AAkCA;;;;;AAKA,SAAgBgB,MAAMA,CAACf,KAAY,EAAEgB,KAAa,EAAEd,IAAc;EAAd,IAAAA,IAAA;IAAAA,IAAA,UAAc;EAAA;EACjE,IAAIF,KAAK,CAACK,MAAM,EAAE;IACjB,IAAMY,KAAK,GAAGlB,MAAM,CAACC,KAAK,EAAEgB,KAAK,CAACd,IAAI,CAAC,EAAEA,IAAI,CAAC;IAC9CF,KAAK,CAACkB,MAAM,CAACD,KAAK,GAAG,CAAC,EAAE,CAAC,EAAED,KAAK,CAAC;GACjC,MAAM;IACNhB,KAAK,CAACmB,IAAI,CAACH,KAAK,CAAC;;AAEnB;AAPAF,OAAA,CAAAC,MAAA,GAAAA,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}