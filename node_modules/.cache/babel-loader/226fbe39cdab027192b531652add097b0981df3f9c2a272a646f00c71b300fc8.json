{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createControlChanges = void 0;\nvar ControlChange_1 = require(\"./ControlChange\");\n/**\n * Automatically creates an alias for named control values using Proxies\n * @hidden\n */\nfunction createControlChanges() {\n  return new Proxy({}, {\n    // tslint:disable-next-line: typedef\n    get: function (target, handler) {\n      if (target[handler]) {\n        return target[handler];\n      } else if (ControlChange_1.controlChangeIds.hasOwnProperty(handler)) {\n        return target[ControlChange_1.controlChangeIds[handler]];\n      }\n    },\n    // tslint:disable-next-line: typedef\n    set: function (target, handler, value) {\n      if (ControlChange_1.controlChangeIds.hasOwnProperty(handler)) {\n        target[ControlChange_1.controlChangeIds[handler]] = value;\n      } else {\n        target[handler] = value;\n      }\n      return true;\n    }\n  });\n}\nexports.createControlChanges = createControlChanges;","map":{"version":3,"names":["ControlChange_1","require","createControlChanges","Proxy","get","target","handler","controlChangeIds","hasOwnProperty","set","value","exports"],"sources":["/Users/niko/Documents/PAL-Imperator/node_modules/@tonejs/midi/src/ControlChanges.ts"],"sourcesContent":["import { controlChangeIds } from \"./ControlChange\";\nimport { ControlChange, ControlChangeJSON } from \"./ControlChange\";\n\nexport interface ControlChanges {\n\t[key: string]: ControlChange[];\n\t[key: number]: ControlChange[];\n}\n\nexport interface ControlChangesJSON {\n\t[key: string]: ControlChangeJSON[];\n\t[key: number]: ControlChangeJSON[];\n}\n\n/**\n * Automatically creates an alias for named control values using Proxies\n * @hidden\n */\nexport function createControlChanges(): ControlChanges {\n\treturn new Proxy({}, {\n\t\t// tslint:disable-next-line: typedef\n\t\tget(target, handler) {\n\t\t\tif (target[handler]) {\n\t\t\t\treturn target[handler];\n\t\t\t} else if (controlChangeIds.hasOwnProperty(handler)) {\n\t\t\t\treturn target[controlChangeIds[handler]];\n\t\t\t}\n\t\t},\n\t\t// tslint:disable-next-line: typedef\n\t\tset(target, handler, value) {\n\t\t\tif (controlChangeIds.hasOwnProperty(handler)) {\n\t\t\t\ttarget[controlChangeIds[handler]] = value;\n\t\t\t} else {\n\t\t\t\ttarget[handler] = value;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t});\n}\n"],"mappings":";;;;;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AAaA;;;;AAIA,SAAgBC,oBAAoBA,CAAA;EACnC,OAAO,IAAIC,KAAK,CAAC,EAAE,EAAE;IACpB;IACAC,GAAG,WAAAA,CAACC,MAAM,EAAEC,OAAO;MAClB,IAAID,MAAM,CAACC,OAAO,CAAC,EAAE;QACpB,OAAOD,MAAM,CAACC,OAAO,CAAC;OACtB,MAAM,IAAIN,eAAA,CAAAO,gBAAgB,CAACC,cAAc,CAACF,OAAO,CAAC,EAAE;QACpD,OAAOD,MAAM,CAACL,eAAA,CAAAO,gBAAgB,CAACD,OAAO,CAAC,CAAC;;IAE1C,CAAC;IACD;IACAG,GAAG,WAAAA,CAACJ,MAAM,EAAEC,OAAO,EAAEI,KAAK;MACzB,IAAIV,eAAA,CAAAO,gBAAgB,CAACC,cAAc,CAACF,OAAO,CAAC,EAAE;QAC7CD,MAAM,CAACL,eAAA,CAAAO,gBAAgB,CAACD,OAAO,CAAC,CAAC,GAAGI,KAAK;OACzC,MAAM;QACNL,MAAM,CAACC,OAAO,CAAC,GAAGI,KAAK;;MAExB,OAAO,IAAI;IACZ;GACA,CAAC;AACH;AApBAC,OAAA,CAAAT,oBAAA,GAAAA,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}