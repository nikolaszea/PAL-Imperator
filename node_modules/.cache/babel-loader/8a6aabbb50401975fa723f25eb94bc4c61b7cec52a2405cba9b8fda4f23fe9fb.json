{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PitchBend = void 0;\nvar privateHeaderMap = new WeakMap();\n/**\n * Represents a pitch bend event.\n */\nvar PitchBend = /** @class */function () {\n  /**\n   * @param event\n   * @param header\n   */\n  function PitchBend(event, header) {\n    privateHeaderMap.set(this, header);\n    this.ticks = event.absoluteTime;\n    this.value = event.value;\n  }\n  Object.defineProperty(PitchBend.prototype, \"time\", {\n    /**\n     * The time of the event in seconds\n     */\n    get: function () {\n      var header = privateHeaderMap.get(this);\n      return header.ticksToSeconds(this.ticks);\n    },\n    set: function (t) {\n      var header = privateHeaderMap.get(this);\n      this.ticks = header.secondsToTicks(t);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PitchBend.prototype.toJSON = function () {\n    return {\n      ticks: this.ticks,\n      time: this.time,\n      value: this.value\n    };\n  };\n  return PitchBend;\n}();\nexports.PitchBend = PitchBend;","map":{"version":3,"names":["privateHeaderMap","WeakMap","PitchBend","event","header","set","ticks","absoluteTime","value","Object","defineProperty","prototype","get","ticksToSeconds","t","secondsToTicks","toJSON","time","exports"],"sources":["/Users/niko/Documents/PAL-Imperator/node_modules/@tonejs/midi/src/PitchBend.ts"],"sourcesContent":["import { Header } from \"./Header\";\nimport { MidiPitchBendEvent } from \"midi-file\";\n\nconst privateHeaderMap = new WeakMap<PitchBend, Header>();\n\n/**\n * Represents a pitch bend event.\n */\nexport class PitchBend implements PitchBendInterface {\n\n\t/**\n\t * The pitch value from...\n\t */\n\tvalue: number;\n\n\t/**\n\t * The tick time of the event.\n\t */\n\tticks: number;\n\n\t/**\n\t * @param event\n\t * @param header\n\t */\n\tconstructor(event: Partial<MidiPitchBendEvent & { absoluteTime: number; }>, header: Header) {\n\t\tprivateHeaderMap.set(this, header);\n\n\t\tthis.ticks = event.absoluteTime;\n\t\tthis.value = event.value;\n\t}\n\n\t/**\n\t * The time of the event in seconds\n\t */\n\tget time(): number {\n\t\tconst header = privateHeaderMap.get(this);\n\t\treturn header.ticksToSeconds(this.ticks);\n\t}\n\n\tset time(t: number) {\n\t\tconst header = privateHeaderMap.get(this);\n\t\tthis.ticks = header.secondsToTicks(t);\n\t}\n\n\ttoJSON(): PitchBendJSON {\n\t\treturn {\n\t\t\tticks: this.ticks,\n\t\t\ttime: this.time,\n\t\t\tvalue: this.value,\n\t\t};\n\t}\n}\n\nexport interface PitchBendJSON {\n\tticks: number;\n\ttime: number;\n\tvalue: number;\n}\n\nexport interface PitchBendInterface {\n\tticks: number;\n\ttime: number;\n\tvalue: number;\n}\n"],"mappings":";;;;;;AAGA,IAAMA,gBAAgB,GAAG,IAAIC,OAAO,EAAqB;AAEzD;;;AAGA,IAAAC,SAAA;EAYC;;;;EAIA,SAAAA,UAAYC,KAA8D,EAAEC,MAAc;IACzFJ,gBAAgB,CAACK,GAAG,CAAC,IAAI,EAAED,MAAM,CAAC;IAElC,IAAI,CAACE,KAAK,GAAGH,KAAK,CAACI,YAAY;IAC/B,IAAI,CAACC,KAAK,GAAGL,KAAK,CAACK,KAAK;EACzB;EAKAC,MAAA,CAAAC,cAAA,CAAIR,SAAA,CAAAS,SAAA,QAAI;IAHR;;;SAGA,SAAAC,CAAA;MACC,IAAMR,MAAM,GAAGJ,gBAAgB,CAACY,GAAG,CAAC,IAAI,CAAC;MACzC,OAAOR,MAAM,CAACS,cAAc,CAAC,IAAI,CAACP,KAAK,CAAC;IACzC,CAAC;SAED,SAAAD,CAASS,CAAS;MACjB,IAAMV,MAAM,GAAGJ,gBAAgB,CAACY,GAAG,CAAC,IAAI,CAAC;MACzC,IAAI,CAACN,KAAK,GAAGF,MAAM,CAACW,cAAc,CAACD,CAAC,CAAC;IACtC,CAAC;;;;EAEDZ,SAAA,CAAAS,SAAA,CAAAK,MAAM,GAAN;IACC,OAAO;MACNV,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBW,IAAI,EAAE,IAAI,CAACA,IAAI;MACfT,KAAK,EAAE,IAAI,CAACA;KACZ;EACF,CAAC;EACF,OAAAN,SAAC;AAAD,CAAC,CA3CD;AAAagB,OAAA,CAAAhB,SAAA,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}