{"ast":null,"code":"// data can be any array-like object.  It just needs to support .length, .slice, and an element getter []\n\nfunction parseMidi(data) {\n  var p = new Parser(data);\n  var headerChunk = p.readChunk();\n  if (headerChunk.id != 'MThd') throw \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\";\n  var header = parseHeader(headerChunk.data);\n  var tracks = [];\n  for (var i = 0; !p.eof() && i < header.numTracks; i++) {\n    var trackChunk = p.readChunk();\n    if (trackChunk.id != 'MTrk') throw \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\";\n    var track = parseTrack(trackChunk.data);\n    tracks.push(track);\n  }\n  return {\n    header: header,\n    tracks: tracks\n  };\n}\nfunction parseHeader(data) {\n  var p = new Parser(data);\n  var format = p.readUInt16();\n  var numTracks = p.readUInt16();\n  var result = {\n    format: format,\n    numTracks: numTracks\n  };\n  var timeDivision = p.readUInt16();\n  if (timeDivision & 0x8000) {\n    result.framesPerSecond = 0x100 - (timeDivision >> 8);\n    result.ticksPerFrame = timeDivision & 0xFF;\n  } else {\n    result.ticksPerBeat = timeDivision;\n  }\n  return result;\n}\nfunction parseTrack(data) {\n  var p = new Parser(data);\n  var events = [];\n  while (!p.eof()) {\n    var event = readEvent();\n    events.push(event);\n  }\n  return events;\n  var lastEventTypeByte = null;\n  function readEvent() {\n    var event = {};\n    event.deltaTime = p.readVarInt();\n    var eventTypeByte = p.readUInt8();\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n      // system / meta event\n      if (eventTypeByte === 0xff) {\n        // meta event\n        event.meta = true;\n        var metatypeByte = p.readUInt8();\n        var length = p.readVarInt();\n        switch (metatypeByte) {\n          case 0x00:\n            event.type = 'sequenceNumber';\n            if (length !== 2) throw \"Expected length for sequenceNumber event is 2, got \" + length;\n            event.number = p.readUInt16();\n            return event;\n          case 0x01:\n            event.type = 'text';\n            event.text = p.readString(length);\n            return event;\n          case 0x02:\n            event.type = 'copyrightNotice';\n            event.text = p.readString(length);\n            return event;\n          case 0x03:\n            event.type = 'trackName';\n            event.text = p.readString(length);\n            return event;\n          case 0x04:\n            event.type = 'instrumentName';\n            event.text = p.readString(length);\n            return event;\n          case 0x05:\n            event.type = 'lyrics';\n            event.text = p.readString(length);\n            return event;\n          case 0x06:\n            event.type = 'marker';\n            event.text = p.readString(length);\n            return event;\n          case 0x07:\n            event.type = 'cuePoint';\n            event.text = p.readString(length);\n            return event;\n          case 0x20:\n            event.type = 'channelPrefix';\n            if (length != 1) throw \"Expected length for channelPrefix event is 1, got \" + length;\n            event.channel = p.readUInt8();\n            return event;\n          case 0x21:\n            event.type = 'portPrefix';\n            if (length != 1) throw \"Expected length for portPrefix event is 1, got \" + length;\n            event.port = p.readUInt8();\n            return event;\n          case 0x2f:\n            event.type = 'endOfTrack';\n            if (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length;\n            return event;\n          case 0x51:\n            event.type = 'setTempo';\n            if (length != 3) throw \"Expected length for setTempo event is 3, got \" + length;\n            event.microsecondsPerBeat = p.readUInt24();\n            return event;\n          case 0x54:\n            event.type = 'smpteOffset';\n            if (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length;\n            var hourByte = p.readUInt8();\n            var FRAME_RATES = {\n              0x00: 24,\n              0x20: 25,\n              0x40: 29,\n              0x60: 30\n            };\n            event.frameRate = FRAME_RATES[hourByte & 0x60];\n            event.hour = hourByte & 0x1f;\n            event.min = p.readUInt8();\n            event.sec = p.readUInt8();\n            event.frame = p.readUInt8();\n            event.subFrame = p.readUInt8();\n            return event;\n          case 0x58:\n            event.type = 'timeSignature';\n            if (length != 2 && length != 4) throw \"Expected length for timeSignature event is 4 or 2, got \" + length;\n            event.numerator = p.readUInt8();\n            event.denominator = 1 << p.readUInt8();\n            if (length === 4) {\n              event.metronome = p.readUInt8();\n              event.thirtyseconds = p.readUInt8();\n            } else {\n              event.metronome = 0x24;\n              event.thirtyseconds = 0x08;\n            }\n            return event;\n          case 0x59:\n            event.type = 'keySignature';\n            if (length != 2) throw \"Expected length for keySignature event is 2, got \" + length;\n            event.key = p.readInt8();\n            event.scale = p.readUInt8();\n            return event;\n          case 0x7f:\n            event.type = 'sequencerSpecific';\n            event.data = p.readBytes(length);\n            return event;\n          default:\n            event.type = 'unknownMeta';\n            event.data = p.readBytes(length);\n            event.metatypeByte = metatypeByte;\n            return event;\n        }\n      } else if (eventTypeByte == 0xf0) {\n        event.type = 'sysEx';\n        var length = p.readVarInt();\n        event.data = p.readBytes(length);\n        return event;\n      } else if (eventTypeByte == 0xf7) {\n        event.type = 'endSysEx';\n        var length = p.readVarInt();\n        event.data = p.readBytes(length);\n        return event;\n      } else {\n        throw \"Unrecognised MIDI event type byte: \" + eventTypeByte;\n      }\n    } else {\n      // channel event\n      var param1;\n      if ((eventTypeByte & 0x80) === 0) {\n        // running status - reuse lastEventTypeByte as the event type.\n        // eventTypeByte is actually the first parameter\n        if (lastEventTypeByte === null) throw \"Running status byte encountered before status byte\";\n        param1 = eventTypeByte;\n        eventTypeByte = lastEventTypeByte;\n        event.running = true;\n      } else {\n        param1 = p.readUInt8();\n        lastEventTypeByte = eventTypeByte;\n      }\n      var eventType = eventTypeByte >> 4;\n      event.channel = eventTypeByte & 0x0f;\n      switch (eventType) {\n        case 0x08:\n          event.type = 'noteOff';\n          event.noteNumber = param1;\n          event.velocity = p.readUInt8();\n          return event;\n        case 0x09:\n          var velocity = p.readUInt8();\n          event.type = velocity === 0 ? 'noteOff' : 'noteOn';\n          event.noteNumber = param1;\n          event.velocity = velocity;\n          if (velocity === 0) event.byte9 = true;\n          return event;\n        case 0x0a:\n          event.type = 'noteAftertouch';\n          event.noteNumber = param1;\n          event.amount = p.readUInt8();\n          return event;\n        case 0x0b:\n          event.type = 'controller';\n          event.controllerType = param1;\n          event.value = p.readUInt8();\n          return event;\n        case 0x0c:\n          event.type = 'programChange';\n          event.programNumber = param1;\n          return event;\n        case 0x0d:\n          event.type = 'channelAftertouch';\n          event.amount = param1;\n          return event;\n        case 0x0e:\n          event.type = 'pitchBend';\n          event.value = param1 + (p.readUInt8() << 7) - 0x2000;\n          return event;\n        default:\n          throw \"Unrecognised MIDI event type: \" + eventType;\n      }\n    }\n  }\n}\nfunction Parser(data) {\n  this.buffer = data;\n  this.bufferLen = this.buffer.length;\n  this.pos = 0;\n}\nParser.prototype.eof = function () {\n  return this.pos >= this.bufferLen;\n};\nParser.prototype.readUInt8 = function () {\n  var result = this.buffer[this.pos];\n  this.pos += 1;\n  return result;\n};\nParser.prototype.readInt8 = function () {\n  var u = this.readUInt8();\n  if (u & 0x80) return u - 0x100;else return u;\n};\nParser.prototype.readUInt16 = function () {\n  var b0 = this.readUInt8(),\n    b1 = this.readUInt8();\n  return (b0 << 8) + b1;\n};\nParser.prototype.readInt16 = function () {\n  var u = this.readUInt16();\n  if (u & 0x8000) return u - 0x10000;else return u;\n};\nParser.prototype.readUInt24 = function () {\n  var b0 = this.readUInt8(),\n    b1 = this.readUInt8(),\n    b2 = this.readUInt8();\n  return (b0 << 16) + (b1 << 8) + b2;\n};\nParser.prototype.readInt24 = function () {\n  var u = this.readUInt24();\n  if (u & 0x800000) return u - 0x1000000;else return u;\n};\nParser.prototype.readUInt32 = function () {\n  var b0 = this.readUInt8(),\n    b1 = this.readUInt8(),\n    b2 = this.readUInt8(),\n    b3 = this.readUInt8();\n  return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n};\nParser.prototype.readBytes = function (len) {\n  var bytes = this.buffer.slice(this.pos, this.pos + len);\n  this.pos += len;\n  return bytes;\n};\nParser.prototype.readString = function (len) {\n  var bytes = this.readBytes(len);\n  return String.fromCharCode.apply(null, bytes);\n};\nParser.prototype.readVarInt = function () {\n  var result = 0;\n  while (!this.eof()) {\n    var b = this.readUInt8();\n    if (b & 0x80) {\n      result += b & 0x7f;\n      result <<= 7;\n    } else {\n      // b is last byte\n      return result + b;\n    }\n  }\n  // premature eof\n  return result;\n};\nParser.prototype.readChunk = function () {\n  var id = this.readString(4);\n  var length = this.readUInt32();\n  var data = this.readBytes(length);\n  return {\n    id: id,\n    length: length,\n    data: data\n  };\n};\nmodule.exports = parseMidi;","map":{"version":3,"names":["parseMidi","data","p","Parser","headerChunk","readChunk","id","header","parseHeader","tracks","i","eof","numTracks","trackChunk","track","parseTrack","push","format","readUInt16","result","timeDivision","framesPerSecond","ticksPerFrame","ticksPerBeat","events","event","readEvent","lastEventTypeByte","deltaTime","readVarInt","eventTypeByte","readUInt8","meta","metatypeByte","length","type","number","text","readString","channel","port","microsecondsPerBeat","readUInt24","hourByte","FRAME_RATES","frameRate","hour","min","sec","frame","subFrame","numerator","denominator","metronome","thirtyseconds","key","readInt8","scale","readBytes","param1","running","eventType","noteNumber","velocity","byte9","amount","controllerType","value","programNumber","buffer","bufferLen","pos","prototype","u","b0","b1","readInt16","b2","readInt24","readUInt32","b3","len","bytes","slice","String","fromCharCode","apply","b","module","exports"],"sources":["/Users/niko/Documents/PAL-Imperator/node_modules/midi-file/lib/midi-parser.js"],"sourcesContent":["// data can be any array-like object.  It just needs to support .length, .slice, and an element getter []\n\nfunction parseMidi(data) {\n  var p = new Parser(data)\n\n  var headerChunk = p.readChunk()\n  if (headerChunk.id != 'MThd')\n    throw \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\"\n  var header = parseHeader(headerChunk.data)\n\n  var tracks = []\n  for (var i=0; !p.eof() && i < header.numTracks; i++) {\n    var trackChunk = p.readChunk()\n    if (trackChunk.id != 'MTrk')\n      throw \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\"\n    var track = parseTrack(trackChunk.data)\n    tracks.push(track)\n  }\n\n  return {\n    header: header,\n    tracks: tracks\n  }\n}\n\n\nfunction parseHeader(data) {\n  var p = new Parser(data)\n\n  var format = p.readUInt16()\n  var numTracks = p.readUInt16()\n\n  var result = {\n    format: format,\n    numTracks: numTracks\n  }\n\n  var timeDivision = p.readUInt16()\n  if (timeDivision & 0x8000) {\n    result.framesPerSecond = 0x100 - (timeDivision >> 8)\n    result.ticksPerFrame = timeDivision & 0xFF\n  } else {\n    result.ticksPerBeat = timeDivision\n  }\n\n  return result\n}\n\nfunction parseTrack(data) {\n  var p = new Parser(data)\n\n  var events = []\n  while (!p.eof()) {\n    var event = readEvent()\n    events.push(event)\n  }\n\n  return events\n\n  var lastEventTypeByte = null\n\n  function readEvent() {\n    var event = {}\n    event.deltaTime = p.readVarInt()\n\n    var eventTypeByte = p.readUInt8()\n\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n      // system / meta event\n      if (eventTypeByte === 0xff) {\n        // meta event\n        event.meta = true\n        var metatypeByte = p.readUInt8()\n        var length = p.readVarInt()\n        switch (metatypeByte) {\n          case 0x00:\n            event.type = 'sequenceNumber'\n            if (length !== 2) throw \"Expected length for sequenceNumber event is 2, got \" + length\n            event.number = p.readUInt16()\n            return event\n          case 0x01:\n            event.type = 'text'\n            event.text = p.readString(length)\n            return event\n          case 0x02:\n            event.type = 'copyrightNotice'\n            event.text = p.readString(length)\n            return event\n          case 0x03:\n            event.type = 'trackName'\n            event.text = p.readString(length)\n            return event\n          case 0x04:\n            event.type = 'instrumentName'\n            event.text = p.readString(length)\n            return event\n          case 0x05:\n            event.type = 'lyrics'\n            event.text = p.readString(length)\n            return event\n          case 0x06:\n            event.type = 'marker'\n            event.text = p.readString(length)\n            return event\n          case 0x07:\n            event.type = 'cuePoint'\n            event.text = p.readString(length)\n            return event\n          case 0x20:\n            event.type = 'channelPrefix'\n            if (length != 1) throw \"Expected length for channelPrefix event is 1, got \" + length\n            event.channel = p.readUInt8()\n            return event\n          case 0x21:\n            event.type = 'portPrefix'\n            if (length != 1) throw \"Expected length for portPrefix event is 1, got \" + length\n            event.port = p.readUInt8()\n            return event\n          case 0x2f:\n            event.type = 'endOfTrack'\n            if (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length\n            return event\n          case 0x51:\n            event.type = 'setTempo';\n            if (length != 3) throw \"Expected length for setTempo event is 3, got \" + length\n            event.microsecondsPerBeat = p.readUInt24()\n            return event\n          case 0x54:\n            event.type = 'smpteOffset';\n            if (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length\n            var hourByte = p.readUInt8()\n            var FRAME_RATES = { 0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30 }\n            event.frameRate = FRAME_RATES[hourByte & 0x60]\n            event.hour = hourByte & 0x1f\n            event.min = p.readUInt8()\n            event.sec = p.readUInt8()\n            event.frame = p.readUInt8()\n            event.subFrame = p.readUInt8()\n            return event\n          case 0x58:\n            event.type = 'timeSignature'\n            if (length != 2 && length != 4) throw \"Expected length for timeSignature event is 4 or 2, got \" + length\n            event.numerator = p.readUInt8()\n            event.denominator = (1 << p.readUInt8())\n            if (length === 4) {\n              event.metronome = p.readUInt8()\n              event.thirtyseconds = p.readUInt8()\n            } else {\n              event.metronome = 0x24\n              event.thirtyseconds = 0x08\n            }\n            return event\n          case 0x59:\n            event.type = 'keySignature'\n            if (length != 2) throw \"Expected length for keySignature event is 2, got \" + length\n            event.key = p.readInt8()\n            event.scale = p.readUInt8()\n            return event\n          case 0x7f:\n            event.type = 'sequencerSpecific'\n            event.data = p.readBytes(length)\n            return event\n          default:\n            event.type = 'unknownMeta'\n            event.data = p.readBytes(length)\n            event.metatypeByte = metatypeByte\n            return event\n        }\n      } else if (eventTypeByte == 0xf0) {\n        event.type = 'sysEx'\n        var length = p.readVarInt()\n        event.data = p.readBytes(length)\n        return event\n      } else if (eventTypeByte == 0xf7) {\n        event.type = 'endSysEx'\n        var length = p.readVarInt()\n        event.data = p.readBytes(length)\n        return event\n      } else {\n        throw \"Unrecognised MIDI event type byte: \" + eventTypeByte\n      }\n    } else {\n      // channel event\n      var param1\n      if ((eventTypeByte & 0x80) === 0) {\n        // running status - reuse lastEventTypeByte as the event type.\n        // eventTypeByte is actually the first parameter\n        if (lastEventTypeByte === null)\n          throw \"Running status byte encountered before status byte\"\n        param1 = eventTypeByte\n        eventTypeByte = lastEventTypeByte\n        event.running = true\n      } else {\n        param1 = p.readUInt8()\n        lastEventTypeByte = eventTypeByte\n      }\n      var eventType = eventTypeByte >> 4\n      event.channel = eventTypeByte & 0x0f\n      switch (eventType) {\n        case 0x08:\n          event.type = 'noteOff'\n          event.noteNumber = param1\n          event.velocity = p.readUInt8()\n          return event\n        case 0x09:\n          var velocity = p.readUInt8()\n          event.type = velocity === 0 ? 'noteOff' : 'noteOn'\n          event.noteNumber = param1\n          event.velocity = velocity\n          if (velocity === 0) event.byte9 = true\n          return event\n        case 0x0a:\n          event.type = 'noteAftertouch'\n          event.noteNumber = param1\n          event.amount = p.readUInt8()\n          return event\n        case 0x0b:\n          event.type = 'controller'\n          event.controllerType = param1\n          event.value = p.readUInt8()\n          return event\n        case 0x0c:\n          event.type = 'programChange'\n          event.programNumber = param1\n          return event\n        case 0x0d:\n          event.type = 'channelAftertouch'\n          event.amount = param1\n          return event\n        case 0x0e:\n          event.type = 'pitchBend'\n          event.value = (param1 + (p.readUInt8() << 7)) - 0x2000\n          return event\n        default:\n          throw \"Unrecognised MIDI event type: \" + eventType\n      }\n    }\n  }\n}\n\nfunction Parser(data) {\n  this.buffer = data\n  this.bufferLen = this.buffer.length\n  this.pos = 0\n}\n\nParser.prototype.eof = function() {\n  return this.pos >= this.bufferLen\n}\n\nParser.prototype.readUInt8 = function() {\n  var result = this.buffer[this.pos]\n  this.pos += 1\n  return result\n}\n\nParser.prototype.readInt8 = function() {\n  var u = this.readUInt8()\n  if (u & 0x80)\n    return u - 0x100\n  else\n    return u\n}\n\nParser.prototype.readUInt16 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8()\n\n    return (b0 << 8) + b1\n}\n\nParser.prototype.readInt16 = function() {\n  var u = this.readUInt16()\n  if (u & 0x8000)\n    return u - 0x10000\n  else\n    return u\n}\n\nParser.prototype.readUInt24 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8(),\n      b2 = this.readUInt8()\n\n    return (b0 << 16) + (b1 << 8) + b2\n}\n\nParser.prototype.readInt24 = function() {\n  var u = this.readUInt24()\n  if (u & 0x800000)\n    return u - 0x1000000\n  else\n    return u\n}\n\nParser.prototype.readUInt32 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8(),\n      b2 = this.readUInt8(),\n      b3 = this.readUInt8()\n\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3\n}\n\nParser.prototype.readBytes = function(len) {\n  var bytes = this.buffer.slice(this.pos, this.pos + len)\n  this.pos += len\n  return bytes\n}\n\nParser.prototype.readString = function(len) {\n  var bytes = this.readBytes(len)\n  return String.fromCharCode.apply(null, bytes)\n}\n\nParser.prototype.readVarInt = function() {\n  var result = 0\n  while (!this.eof()) {\n    var b = this.readUInt8()\n    if (b & 0x80) {\n      result += (b & 0x7f)\n      result <<= 7\n    } else {\n      // b is last byte\n      return result + b\n    }\n  }\n  // premature eof\n  return result\n}\n\nParser.prototype.readChunk = function() {\n  var id = this.readString(4)\n  var length = this.readUInt32()\n  var data = this.readBytes(length)\n  return {\n    id: id,\n    length: length,\n    data: data\n  }\n}\n\nmodule.exports = parseMidi\n"],"mappings":"AAAA;;AAEA,SAASA,SAASA,CAACC,IAAI,EAAE;EACvB,IAAIC,CAAC,GAAG,IAAIC,MAAM,CAACF,IAAI,CAAC;EAExB,IAAIG,WAAW,GAAGF,CAAC,CAACG,SAAS,CAAC,CAAC;EAC/B,IAAID,WAAW,CAACE,EAAE,IAAI,MAAM,EAC1B,MAAM,yCAAyC,GAAGF,WAAW,CAACE,EAAE,GAAG,GAAG;EACxE,IAAIC,MAAM,GAAGC,WAAW,CAACJ,WAAW,CAACH,IAAI,CAAC;EAE1C,IAAIQ,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAE,CAACR,CAAC,CAACS,GAAG,CAAC,CAAC,IAAID,CAAC,GAAGH,MAAM,CAACK,SAAS,EAAEF,CAAC,EAAE,EAAE;IACnD,IAAIG,UAAU,GAAGX,CAAC,CAACG,SAAS,CAAC,CAAC;IAC9B,IAAIQ,UAAU,CAACP,EAAE,IAAI,MAAM,EACzB,MAAM,yCAAyC,GAAGO,UAAU,CAACP,EAAE,GAAG,GAAG;IACvE,IAAIQ,KAAK,GAAGC,UAAU,CAACF,UAAU,CAACZ,IAAI,CAAC;IACvCQ,MAAM,CAACO,IAAI,CAACF,KAAK,CAAC;EACpB;EAEA,OAAO;IACLP,MAAM,EAAEA,MAAM;IACdE,MAAM,EAAEA;EACV,CAAC;AACH;AAGA,SAASD,WAAWA,CAACP,IAAI,EAAE;EACzB,IAAIC,CAAC,GAAG,IAAIC,MAAM,CAACF,IAAI,CAAC;EAExB,IAAIgB,MAAM,GAAGf,CAAC,CAACgB,UAAU,CAAC,CAAC;EAC3B,IAAIN,SAAS,GAAGV,CAAC,CAACgB,UAAU,CAAC,CAAC;EAE9B,IAAIC,MAAM,GAAG;IACXF,MAAM,EAAEA,MAAM;IACdL,SAAS,EAAEA;EACb,CAAC;EAED,IAAIQ,YAAY,GAAGlB,CAAC,CAACgB,UAAU,CAAC,CAAC;EACjC,IAAIE,YAAY,GAAG,MAAM,EAAE;IACzBD,MAAM,CAACE,eAAe,GAAG,KAAK,IAAID,YAAY,IAAI,CAAC,CAAC;IACpDD,MAAM,CAACG,aAAa,GAAGF,YAAY,GAAG,IAAI;EAC5C,CAAC,MAAM;IACLD,MAAM,CAACI,YAAY,GAAGH,YAAY;EACpC;EAEA,OAAOD,MAAM;AACf;AAEA,SAASJ,UAAUA,CAACd,IAAI,EAAE;EACxB,IAAIC,CAAC,GAAG,IAAIC,MAAM,CAACF,IAAI,CAAC;EAExB,IAAIuB,MAAM,GAAG,EAAE;EACf,OAAO,CAACtB,CAAC,CAACS,GAAG,CAAC,CAAC,EAAE;IACf,IAAIc,KAAK,GAAGC,SAAS,CAAC,CAAC;IACvBF,MAAM,CAACR,IAAI,CAACS,KAAK,CAAC;EACpB;EAEA,OAAOD,MAAM;EAEb,IAAIG,iBAAiB,GAAG,IAAI;EAE5B,SAASD,SAASA,CAAA,EAAG;IACnB,IAAID,KAAK,GAAG,CAAC,CAAC;IACdA,KAAK,CAACG,SAAS,GAAG1B,CAAC,CAAC2B,UAAU,CAAC,CAAC;IAEhC,IAAIC,aAAa,GAAG5B,CAAC,CAAC6B,SAAS,CAAC,CAAC;IAEjC,IAAI,CAACD,aAAa,GAAG,IAAI,MAAM,IAAI,EAAE;MACnC;MACA,IAAIA,aAAa,KAAK,IAAI,EAAE;QAC1B;QACAL,KAAK,CAACO,IAAI,GAAG,IAAI;QACjB,IAAIC,YAAY,GAAG/B,CAAC,CAAC6B,SAAS,CAAC,CAAC;QAChC,IAAIG,MAAM,GAAGhC,CAAC,CAAC2B,UAAU,CAAC,CAAC;QAC3B,QAAQI,YAAY;UAClB,KAAK,IAAI;YACPR,KAAK,CAACU,IAAI,GAAG,gBAAgB;YAC7B,IAAID,MAAM,KAAK,CAAC,EAAE,MAAM,qDAAqD,GAAGA,MAAM;YACtFT,KAAK,CAACW,MAAM,GAAGlC,CAAC,CAACgB,UAAU,CAAC,CAAC;YAC7B,OAAOO,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,MAAM;YACnBV,KAAK,CAACY,IAAI,GAAGnC,CAAC,CAACoC,UAAU,CAACJ,MAAM,CAAC;YACjC,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,iBAAiB;YAC9BV,KAAK,CAACY,IAAI,GAAGnC,CAAC,CAACoC,UAAU,CAACJ,MAAM,CAAC;YACjC,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,WAAW;YACxBV,KAAK,CAACY,IAAI,GAAGnC,CAAC,CAACoC,UAAU,CAACJ,MAAM,CAAC;YACjC,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,gBAAgB;YAC7BV,KAAK,CAACY,IAAI,GAAGnC,CAAC,CAACoC,UAAU,CAACJ,MAAM,CAAC;YACjC,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,QAAQ;YACrBV,KAAK,CAACY,IAAI,GAAGnC,CAAC,CAACoC,UAAU,CAACJ,MAAM,CAAC;YACjC,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,QAAQ;YACrBV,KAAK,CAACY,IAAI,GAAGnC,CAAC,CAACoC,UAAU,CAACJ,MAAM,CAAC;YACjC,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,UAAU;YACvBV,KAAK,CAACY,IAAI,GAAGnC,CAAC,CAACoC,UAAU,CAACJ,MAAM,CAAC;YACjC,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,eAAe;YAC5B,IAAID,MAAM,IAAI,CAAC,EAAE,MAAM,oDAAoD,GAAGA,MAAM;YACpFT,KAAK,CAACc,OAAO,GAAGrC,CAAC,CAAC6B,SAAS,CAAC,CAAC;YAC7B,OAAON,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,YAAY;YACzB,IAAID,MAAM,IAAI,CAAC,EAAE,MAAM,iDAAiD,GAAGA,MAAM;YACjFT,KAAK,CAACe,IAAI,GAAGtC,CAAC,CAAC6B,SAAS,CAAC,CAAC;YAC1B,OAAON,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,YAAY;YACzB,IAAID,MAAM,IAAI,CAAC,EAAE,MAAM,iDAAiD,GAAGA,MAAM;YACjF,OAAOT,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,UAAU;YACvB,IAAID,MAAM,IAAI,CAAC,EAAE,MAAM,+CAA+C,GAAGA,MAAM;YAC/ET,KAAK,CAACgB,mBAAmB,GAAGvC,CAAC,CAACwC,UAAU,CAAC,CAAC;YAC1C,OAAOjB,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,aAAa;YAC1B,IAAID,MAAM,IAAI,CAAC,EAAE,MAAM,kDAAkD,GAAGA,MAAM;YAClF,IAAIS,QAAQ,GAAGzC,CAAC,CAAC6B,SAAS,CAAC,CAAC;YAC5B,IAAIa,WAAW,GAAG;cAAE,IAAI,EAAE,EAAE;cAAE,IAAI,EAAE,EAAE;cAAE,IAAI,EAAE,EAAE;cAAE,IAAI,EAAE;YAAG,CAAC;YAC5DnB,KAAK,CAACoB,SAAS,GAAGD,WAAW,CAACD,QAAQ,GAAG,IAAI,CAAC;YAC9ClB,KAAK,CAACqB,IAAI,GAAGH,QAAQ,GAAG,IAAI;YAC5BlB,KAAK,CAACsB,GAAG,GAAG7C,CAAC,CAAC6B,SAAS,CAAC,CAAC;YACzBN,KAAK,CAACuB,GAAG,GAAG9C,CAAC,CAAC6B,SAAS,CAAC,CAAC;YACzBN,KAAK,CAACwB,KAAK,GAAG/C,CAAC,CAAC6B,SAAS,CAAC,CAAC;YAC3BN,KAAK,CAACyB,QAAQ,GAAGhD,CAAC,CAAC6B,SAAS,CAAC,CAAC;YAC9B,OAAON,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,eAAe;YAC5B,IAAID,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE,MAAM,yDAAyD,GAAGA,MAAM;YACxGT,KAAK,CAAC0B,SAAS,GAAGjD,CAAC,CAAC6B,SAAS,CAAC,CAAC;YAC/BN,KAAK,CAAC2B,WAAW,GAAI,CAAC,IAAIlD,CAAC,CAAC6B,SAAS,CAAC,CAAE;YACxC,IAAIG,MAAM,KAAK,CAAC,EAAE;cAChBT,KAAK,CAAC4B,SAAS,GAAGnD,CAAC,CAAC6B,SAAS,CAAC,CAAC;cAC/BN,KAAK,CAAC6B,aAAa,GAAGpD,CAAC,CAAC6B,SAAS,CAAC,CAAC;YACrC,CAAC,MAAM;cACLN,KAAK,CAAC4B,SAAS,GAAG,IAAI;cACtB5B,KAAK,CAAC6B,aAAa,GAAG,IAAI;YAC5B;YACA,OAAO7B,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,cAAc;YAC3B,IAAID,MAAM,IAAI,CAAC,EAAE,MAAM,mDAAmD,GAAGA,MAAM;YACnFT,KAAK,CAAC8B,GAAG,GAAGrD,CAAC,CAACsD,QAAQ,CAAC,CAAC;YACxB/B,KAAK,CAACgC,KAAK,GAAGvD,CAAC,CAAC6B,SAAS,CAAC,CAAC;YAC3B,OAAON,KAAK;UACd,KAAK,IAAI;YACPA,KAAK,CAACU,IAAI,GAAG,mBAAmB;YAChCV,KAAK,CAACxB,IAAI,GAAGC,CAAC,CAACwD,SAAS,CAACxB,MAAM,CAAC;YAChC,OAAOT,KAAK;UACd;YACEA,KAAK,CAACU,IAAI,GAAG,aAAa;YAC1BV,KAAK,CAACxB,IAAI,GAAGC,CAAC,CAACwD,SAAS,CAACxB,MAAM,CAAC;YAChCT,KAAK,CAACQ,YAAY,GAAGA,YAAY;YACjC,OAAOR,KAAK;QAChB;MACF,CAAC,MAAM,IAAIK,aAAa,IAAI,IAAI,EAAE;QAChCL,KAAK,CAACU,IAAI,GAAG,OAAO;QACpB,IAAID,MAAM,GAAGhC,CAAC,CAAC2B,UAAU,CAAC,CAAC;QAC3BJ,KAAK,CAACxB,IAAI,GAAGC,CAAC,CAACwD,SAAS,CAACxB,MAAM,CAAC;QAChC,OAAOT,KAAK;MACd,CAAC,MAAM,IAAIK,aAAa,IAAI,IAAI,EAAE;QAChCL,KAAK,CAACU,IAAI,GAAG,UAAU;QACvB,IAAID,MAAM,GAAGhC,CAAC,CAAC2B,UAAU,CAAC,CAAC;QAC3BJ,KAAK,CAACxB,IAAI,GAAGC,CAAC,CAACwD,SAAS,CAACxB,MAAM,CAAC;QAChC,OAAOT,KAAK;MACd,CAAC,MAAM;QACL,MAAM,qCAAqC,GAAGK,aAAa;MAC7D;IACF,CAAC,MAAM;MACL;MACA,IAAI6B,MAAM;MACV,IAAI,CAAC7B,aAAa,GAAG,IAAI,MAAM,CAAC,EAAE;QAChC;QACA;QACA,IAAIH,iBAAiB,KAAK,IAAI,EAC5B,MAAM,oDAAoD;QAC5DgC,MAAM,GAAG7B,aAAa;QACtBA,aAAa,GAAGH,iBAAiB;QACjCF,KAAK,CAACmC,OAAO,GAAG,IAAI;MACtB,CAAC,MAAM;QACLD,MAAM,GAAGzD,CAAC,CAAC6B,SAAS,CAAC,CAAC;QACtBJ,iBAAiB,GAAGG,aAAa;MACnC;MACA,IAAI+B,SAAS,GAAG/B,aAAa,IAAI,CAAC;MAClCL,KAAK,CAACc,OAAO,GAAGT,aAAa,GAAG,IAAI;MACpC,QAAQ+B,SAAS;QACf,KAAK,IAAI;UACPpC,KAAK,CAACU,IAAI,GAAG,SAAS;UACtBV,KAAK,CAACqC,UAAU,GAAGH,MAAM;UACzBlC,KAAK,CAACsC,QAAQ,GAAG7D,CAAC,CAAC6B,SAAS,CAAC,CAAC;UAC9B,OAAON,KAAK;QACd,KAAK,IAAI;UACP,IAAIsC,QAAQ,GAAG7D,CAAC,CAAC6B,SAAS,CAAC,CAAC;UAC5BN,KAAK,CAACU,IAAI,GAAG4B,QAAQ,KAAK,CAAC,GAAG,SAAS,GAAG,QAAQ;UAClDtC,KAAK,CAACqC,UAAU,GAAGH,MAAM;UACzBlC,KAAK,CAACsC,QAAQ,GAAGA,QAAQ;UACzB,IAAIA,QAAQ,KAAK,CAAC,EAAEtC,KAAK,CAACuC,KAAK,GAAG,IAAI;UACtC,OAAOvC,KAAK;QACd,KAAK,IAAI;UACPA,KAAK,CAACU,IAAI,GAAG,gBAAgB;UAC7BV,KAAK,CAACqC,UAAU,GAAGH,MAAM;UACzBlC,KAAK,CAACwC,MAAM,GAAG/D,CAAC,CAAC6B,SAAS,CAAC,CAAC;UAC5B,OAAON,KAAK;QACd,KAAK,IAAI;UACPA,KAAK,CAACU,IAAI,GAAG,YAAY;UACzBV,KAAK,CAACyC,cAAc,GAAGP,MAAM;UAC7BlC,KAAK,CAAC0C,KAAK,GAAGjE,CAAC,CAAC6B,SAAS,CAAC,CAAC;UAC3B,OAAON,KAAK;QACd,KAAK,IAAI;UACPA,KAAK,CAACU,IAAI,GAAG,eAAe;UAC5BV,KAAK,CAAC2C,aAAa,GAAGT,MAAM;UAC5B,OAAOlC,KAAK;QACd,KAAK,IAAI;UACPA,KAAK,CAACU,IAAI,GAAG,mBAAmB;UAChCV,KAAK,CAACwC,MAAM,GAAGN,MAAM;UACrB,OAAOlC,KAAK;QACd,KAAK,IAAI;UACPA,KAAK,CAACU,IAAI,GAAG,WAAW;UACxBV,KAAK,CAAC0C,KAAK,GAAIR,MAAM,IAAIzD,CAAC,CAAC6B,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAI,MAAM;UACtD,OAAON,KAAK;QACd;UACE,MAAM,gCAAgC,GAAGoC,SAAS;MACtD;IACF;EACF;AACF;AAEA,SAAS1D,MAAMA,CAACF,IAAI,EAAE;EACpB,IAAI,CAACoE,MAAM,GAAGpE,IAAI;EAClB,IAAI,CAACqE,SAAS,GAAG,IAAI,CAACD,MAAM,CAACnC,MAAM;EACnC,IAAI,CAACqC,GAAG,GAAG,CAAC;AACd;AAEApE,MAAM,CAACqE,SAAS,CAAC7D,GAAG,GAAG,YAAW;EAChC,OAAO,IAAI,CAAC4D,GAAG,IAAI,IAAI,CAACD,SAAS;AACnC,CAAC;AAEDnE,MAAM,CAACqE,SAAS,CAACzC,SAAS,GAAG,YAAW;EACtC,IAAIZ,MAAM,GAAG,IAAI,CAACkD,MAAM,CAAC,IAAI,CAACE,GAAG,CAAC;EAClC,IAAI,CAACA,GAAG,IAAI,CAAC;EACb,OAAOpD,MAAM;AACf,CAAC;AAEDhB,MAAM,CAACqE,SAAS,CAAChB,QAAQ,GAAG,YAAW;EACrC,IAAIiB,CAAC,GAAG,IAAI,CAAC1C,SAAS,CAAC,CAAC;EACxB,IAAI0C,CAAC,GAAG,IAAI,EACV,OAAOA,CAAC,GAAG,KAAK,MAEhB,OAAOA,CAAC;AACZ,CAAC;AAEDtE,MAAM,CAACqE,SAAS,CAACtD,UAAU,GAAG,YAAW;EACvC,IAAIwD,EAAE,GAAG,IAAI,CAAC3C,SAAS,CAAC,CAAC;IACrB4C,EAAE,GAAG,IAAI,CAAC5C,SAAS,CAAC,CAAC;EAEvB,OAAO,CAAC2C,EAAE,IAAI,CAAC,IAAIC,EAAE;AACzB,CAAC;AAEDxE,MAAM,CAACqE,SAAS,CAACI,SAAS,GAAG,YAAW;EACtC,IAAIH,CAAC,GAAG,IAAI,CAACvD,UAAU,CAAC,CAAC;EACzB,IAAIuD,CAAC,GAAG,MAAM,EACZ,OAAOA,CAAC,GAAG,OAAO,MAElB,OAAOA,CAAC;AACZ,CAAC;AAEDtE,MAAM,CAACqE,SAAS,CAAC9B,UAAU,GAAG,YAAW;EACvC,IAAIgC,EAAE,GAAG,IAAI,CAAC3C,SAAS,CAAC,CAAC;IACrB4C,EAAE,GAAG,IAAI,CAAC5C,SAAS,CAAC,CAAC;IACrB8C,EAAE,GAAG,IAAI,CAAC9C,SAAS,CAAC,CAAC;EAEvB,OAAO,CAAC2C,EAAE,IAAI,EAAE,KAAKC,EAAE,IAAI,CAAC,CAAC,GAAGE,EAAE;AACtC,CAAC;AAED1E,MAAM,CAACqE,SAAS,CAACM,SAAS,GAAG,YAAW;EACtC,IAAIL,CAAC,GAAG,IAAI,CAAC/B,UAAU,CAAC,CAAC;EACzB,IAAI+B,CAAC,GAAG,QAAQ,EACd,OAAOA,CAAC,GAAG,SAAS,MAEpB,OAAOA,CAAC;AACZ,CAAC;AAEDtE,MAAM,CAACqE,SAAS,CAACO,UAAU,GAAG,YAAW;EACvC,IAAIL,EAAE,GAAG,IAAI,CAAC3C,SAAS,CAAC,CAAC;IACrB4C,EAAE,GAAG,IAAI,CAAC5C,SAAS,CAAC,CAAC;IACrB8C,EAAE,GAAG,IAAI,CAAC9C,SAAS,CAAC,CAAC;IACrBiD,EAAE,GAAG,IAAI,CAACjD,SAAS,CAAC,CAAC;EAEvB,OAAO,CAAC2C,EAAE,IAAI,EAAE,KAAKC,EAAE,IAAI,EAAE,CAAC,IAAIE,EAAE,IAAI,CAAC,CAAC,GAAGG,EAAE;AACnD,CAAC;AAED7E,MAAM,CAACqE,SAAS,CAACd,SAAS,GAAG,UAASuB,GAAG,EAAE;EACzC,IAAIC,KAAK,GAAG,IAAI,CAACb,MAAM,CAACc,KAAK,CAAC,IAAI,CAACZ,GAAG,EAAE,IAAI,CAACA,GAAG,GAAGU,GAAG,CAAC;EACvD,IAAI,CAACV,GAAG,IAAIU,GAAG;EACf,OAAOC,KAAK;AACd,CAAC;AAED/E,MAAM,CAACqE,SAAS,CAAClC,UAAU,GAAG,UAAS2C,GAAG,EAAE;EAC1C,IAAIC,KAAK,GAAG,IAAI,CAACxB,SAAS,CAACuB,GAAG,CAAC;EAC/B,OAAOG,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAEJ,KAAK,CAAC;AAC/C,CAAC;AAED/E,MAAM,CAACqE,SAAS,CAAC3C,UAAU,GAAG,YAAW;EACvC,IAAIV,MAAM,GAAG,CAAC;EACd,OAAO,CAAC,IAAI,CAACR,GAAG,CAAC,CAAC,EAAE;IAClB,IAAI4E,CAAC,GAAG,IAAI,CAACxD,SAAS,CAAC,CAAC;IACxB,IAAIwD,CAAC,GAAG,IAAI,EAAE;MACZpE,MAAM,IAAKoE,CAAC,GAAG,IAAK;MACpBpE,MAAM,KAAK,CAAC;IACd,CAAC,MAAM;MACL;MACA,OAAOA,MAAM,GAAGoE,CAAC;IACnB;EACF;EACA;EACA,OAAOpE,MAAM;AACf,CAAC;AAEDhB,MAAM,CAACqE,SAAS,CAACnE,SAAS,GAAG,YAAW;EACtC,IAAIC,EAAE,GAAG,IAAI,CAACgC,UAAU,CAAC,CAAC,CAAC;EAC3B,IAAIJ,MAAM,GAAG,IAAI,CAAC6C,UAAU,CAAC,CAAC;EAC9B,IAAI9E,IAAI,GAAG,IAAI,CAACyD,SAAS,CAACxB,MAAM,CAAC;EACjC,OAAO;IACL5B,EAAE,EAAEA,EAAE;IACN4B,MAAM,EAAEA,MAAM;IACdjC,IAAI,EAAEA;EACR,CAAC;AACH,CAAC;AAEDuF,MAAM,CAACC,OAAO,GAAGzF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}