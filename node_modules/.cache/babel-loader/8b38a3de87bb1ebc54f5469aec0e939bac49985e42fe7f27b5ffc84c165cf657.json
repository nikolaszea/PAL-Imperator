{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const CommandInterface=_ref=>{let{mode,file}=_ref;const[isExtracting,setIsExtracting]=useState(false);const handleExtractMidi=async()=>{if(file){setIsExtracting(true);const formData=new FormData();formData.append('audio',file);try{const response=await fetch('/upload',{method:'POST',body:formData});if(response.ok){const blob=await response.blob();const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=`${file.name.split('.').slice(0,-1).join('.')}-extracted-midi.mid`;link.click();URL.revokeObjectURL(url);}else{console.error('Error extracting MIDI:',response.statusText);}}catch(error){console.error('Error extracting MIDI:',error);}finally{setIsExtracting(false);}}};return/*#__PURE__*/_jsx(\"div\",{children:mode==='Music'&&/*#__PURE__*/_jsx(\"button\",{onClick:handleExtractMidi,disabled:!file||isExtracting,children:isExtracting?'Extracting...':'Extract MIDI'})});};","map":{"version":3,"names":["React","useState","jsx","_jsx","CommandInterface","_ref","mode","file","isExtracting","setIsExtracting","handleExtractMidi","formData","FormData","append","response","fetch","method","body","ok","blob","url","URL","createObjectURL","link","document","createElement","href","download","name","split","slice","join","click","revokeObjectURL","console","error","statusText","children","onClick","disabled"],"sources":["/Users/niko/Documents/PAL-Imperator/src/components/CommandInterface.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface CommandInterfaceProps {\n  mode: 'Music' | 'Literature' | 'Other';\n  file: File | null;\n}\n\nexport const CommandInterface: React.FC<CommandInterfaceProps> = ({ mode, file }) => {\n  const [isExtracting, setIsExtracting] = useState(false);\n\n  const handleExtractMidi = async () => {\n    if (file) {\n      setIsExtracting(true);\n      const formData = new FormData();\n      formData.append('audio', file);\n\n      try {\n        const response = await fetch('/upload', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (response.ok) {\n          const blob = await response.blob();\n          const url = URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = `${file.name.split('.').slice(0, -1).join('.')}-extracted-midi.mid`;\n          link.click();\n          URL.revokeObjectURL(url);\n        } else {\n          console.error('Error extracting MIDI:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error extracting MIDI:', error);\n      } finally {\n        setIsExtracting(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      {mode === 'Music' && (\n        <button onClick={handleExtractMidi} disabled={!file || isExtracting}>\n          {isExtracting ? 'Extracting...' : 'Extract MIDI'}\n        </button>\n      )}\n    </div>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAOxC,MAAO,MAAM,CAAAC,gBAAiD,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAAF,IAAA,CAC9E,KAAM,CAACG,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEvD,KAAM,CAAAS,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAIH,IAAI,CAAE,CACRE,eAAe,CAAC,IAAI,CAAC,CACrB,KAAM,CAAAE,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEN,IAAI,CAAC,CAE9B,GAAI,CACF,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,SAAS,CAAE,CACtCC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEN,QACR,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACI,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CACrC,KAAM,CAAAI,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGN,GAAG,CACfG,IAAI,CAACI,QAAQ,CAAG,GAAGpB,IAAI,CAACqB,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CACnFR,IAAI,CAACS,KAAK,CAAC,CAAC,CACZX,GAAG,CAACY,eAAe,CAACb,GAAG,CAAC,CAC1B,CAAC,IAAM,CACLc,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAErB,QAAQ,CAACsB,UAAU,CAAC,CAC9D,CACF,CAAE,MAAOD,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CAAC,OAAS,CACR1B,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CACF,CAAC,CAED,mBACEN,IAAA,QAAAkC,QAAA,CACG/B,IAAI,GAAK,OAAO,eACfH,IAAA,WAAQmC,OAAO,CAAE5B,iBAAkB,CAAC6B,QAAQ,CAAE,CAAChC,IAAI,EAAIC,YAAa,CAAA6B,QAAA,CACjE7B,YAAY,CAAG,eAAe,CAAG,cAAc,CAC1C,CACT,CACE,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}