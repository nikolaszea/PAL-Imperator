{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Track = void 0;\nvar BinarySearch_1 = require(\"./BinarySearch\");\nvar ControlChange_1 = require(\"./ControlChange\");\nvar ControlChanges_1 = require(\"./ControlChanges\");\nvar PitchBend_1 = require(\"./PitchBend\");\nvar Instrument_1 = require(\"./Instrument\");\nvar Note_1 = require(\"./Note\");\nvar privateHeaderMap = new WeakMap();\n/**\n * A Track is a collection of 'notes' and 'controlChanges'.\n */\nvar Track = /** @class */function () {\n  function Track(trackData, header) {\n    var _this = this;\n    /**\n     * The name of the track.\n     */\n    this.name = \"\";\n    /**\n     * The track's note events.\n     */\n    this.notes = [];\n    /**\n     * The control change events.\n     */\n    this.controlChanges = (0, ControlChanges_1.createControlChanges)();\n    /**\n     * The pitch bend events.\n     */\n    this.pitchBends = [];\n    privateHeaderMap.set(this, header);\n    if (trackData) {\n      // Get the name of the track.\n      var nameEvent = trackData.find(function (e) {\n        return e.type === \"trackName\";\n      });\n      // Set empty name if 'trackName' event isn't found.\n      this.name = nameEvent ? nameEvent.text : \"\";\n    }\n    this.instrument = new Instrument_1.Instrument(trackData, this);\n    // Defaults to 0.\n    this.channel = 0;\n    if (trackData) {\n      var noteOns = trackData.filter(function (event) {\n        return event.type === \"noteOn\";\n      });\n      var noteOffs = trackData.filter(function (event) {\n        return event.type === \"noteOff\";\n      });\n      var _loop_1 = function () {\n        var currentNote = noteOns.shift();\n        // Set the channel based on the note.\n        this_1.channel = currentNote.channel;\n        // Find the corresponding note off.\n        var offIndex = noteOffs.findIndex(function (note) {\n          return note.noteNumber === currentNote.noteNumber && note.absoluteTime >= currentNote.absoluteTime;\n        });\n        if (offIndex !== -1) {\n          // Once it's got the note off, add it.\n          var noteOff = noteOffs.splice(offIndex, 1)[0];\n          this_1.addNote({\n            durationTicks: noteOff.absoluteTime - currentNote.absoluteTime,\n            midi: currentNote.noteNumber,\n            noteOffVelocity: noteOff.velocity / 127,\n            ticks: currentNote.absoluteTime,\n            velocity: currentNote.velocity / 127\n          });\n        }\n      };\n      var this_1 = this;\n      while (noteOns.length) {\n        _loop_1();\n      }\n      var controlChanges = trackData.filter(function (event) {\n        return event.type === \"controller\";\n      });\n      controlChanges.forEach(function (event) {\n        _this.addCC({\n          number: event.controllerType,\n          ticks: event.absoluteTime,\n          value: event.value / 127\n        });\n      });\n      var pitchBends = trackData.filter(function (event) {\n        return event.type === \"pitchBend\";\n      });\n      pitchBends.forEach(function (event) {\n        _this.addPitchBend({\n          ticks: event.absoluteTime,\n          // Scale the value between -2^13 to 2^13 to -2 to 2.\n          value: event.value / Math.pow(2, 13)\n        });\n      });\n      var endOfTrackEvent = trackData.find(function (event) {\n        return event.type === \"endOfTrack\";\n      });\n      this.endOfTrackTicks = endOfTrackEvent !== undefined ? endOfTrackEvent.absoluteTime : undefined;\n    }\n  }\n  /**\n   * Add a note to the notes array.\n   * @param props The note properties to add.\n   */\n  Track.prototype.addNote = function (props) {\n    var header = privateHeaderMap.get(this);\n    var note = new Note_1.Note({\n      midi: 0,\n      ticks: 0,\n      velocity: 1\n    }, {\n      ticks: 0,\n      velocity: 0\n    }, header);\n    Object.assign(note, props);\n    (0, BinarySearch_1.insert)(this.notes, note, \"ticks\");\n    return this;\n  };\n  /**\n   * Add a control change to the track.\n   * @param props\n   */\n  Track.prototype.addCC = function (props) {\n    var header = privateHeaderMap.get(this);\n    var cc = new ControlChange_1.ControlChange({\n      controllerType: props.number\n    }, header);\n    delete props.number;\n    Object.assign(cc, props);\n    if (!Array.isArray(this.controlChanges[cc.number])) {\n      this.controlChanges[cc.number] = [];\n    }\n    (0, BinarySearch_1.insert)(this.controlChanges[cc.number], cc, \"ticks\");\n    return this;\n  };\n  /**\n   * Add a control change to the track.\n   */\n  Track.prototype.addPitchBend = function (props) {\n    var header = privateHeaderMap.get(this);\n    var pb = new PitchBend_1.PitchBend({}, header);\n    Object.assign(pb, props);\n    (0, BinarySearch_1.insert)(this.pitchBends, pb, \"ticks\");\n    return this;\n  };\n  Object.defineProperty(Track.prototype, \"duration\", {\n    /**\n     * The end time of the last event in the track.\n     */\n    get: function () {\n      if (!this.notes.length) {\n        return 0;\n      }\n      var maxDuration = this.notes[this.notes.length - 1].time + this.notes[this.notes.length - 1].duration;\n      for (var i = 0; i < this.notes.length - 1; i++) {\n        var duration = this.notes[i].time + this.notes[i].duration;\n        if (maxDuration < duration) {\n          maxDuration = duration;\n        }\n      }\n      return maxDuration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Track.prototype, \"durationTicks\", {\n    /**\n     * The end time of the last event in the track in ticks.\n     */\n    get: function () {\n      if (!this.notes.length) {\n        return 0;\n      }\n      var maxDuration = this.notes[this.notes.length - 1].ticks + this.notes[this.notes.length - 1].durationTicks;\n      for (var i = 0; i < this.notes.length - 1; i++) {\n        var duration = this.notes[i].ticks + this.notes[i].durationTicks;\n        if (maxDuration < duration) {\n          maxDuration = duration;\n        }\n      }\n      return maxDuration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Assign the JSON values to this track.\n   */\n  Track.prototype.fromJSON = function (json) {\n    var _this = this;\n    this.name = json.name;\n    this.channel = json.channel;\n    this.instrument = new Instrument_1.Instrument(undefined, this);\n    this.instrument.fromJSON(json.instrument);\n    if (json.endOfTrackTicks !== undefined) {\n      this.endOfTrackTicks = json.endOfTrackTicks;\n    }\n    for (var number in json.controlChanges) {\n      if (json.controlChanges[number]) {\n        json.controlChanges[number].forEach(function (cc) {\n          _this.addCC({\n            number: cc.number,\n            ticks: cc.ticks,\n            value: cc.value\n          });\n        });\n      }\n    }\n    json.notes.forEach(function (n) {\n      _this.addNote({\n        durationTicks: n.durationTicks,\n        midi: n.midi,\n        ticks: n.ticks,\n        velocity: n.velocity\n      });\n    });\n  };\n  /**\n   * Convert the track into a JSON format.\n   */\n  Track.prototype.toJSON = function () {\n    // Convert all the CCs to JSON.\n    var controlChanges = {};\n    for (var i = 0; i < 127; i++) {\n      if (this.controlChanges.hasOwnProperty(i)) {\n        controlChanges[i] = this.controlChanges[i].map(function (c) {\n          return c.toJSON();\n        });\n      }\n    }\n    var json = {\n      channel: this.channel,\n      controlChanges: controlChanges,\n      pitchBends: this.pitchBends.map(function (pb) {\n        return pb.toJSON();\n      }),\n      instrument: this.instrument.toJSON(),\n      name: this.name,\n      notes: this.notes.map(function (n) {\n        return n.toJSON();\n      })\n    };\n    if (this.endOfTrackTicks !== undefined) {\n      json.endOfTrackTicks = this.endOfTrackTicks;\n    }\n    return json;\n  };\n  return Track;\n}();\nexports.Track = Track;","map":{"version":3,"names":["BinarySearch_1","require","ControlChange_1","ControlChanges_1","PitchBend_1","Instrument_1","Note_1","privateHeaderMap","WeakMap","Track","trackData","header","_this","name","notes","controlChanges","createControlChanges","pitchBends","set","nameEvent","find","e","type","text","instrument","Instrument","channel","noteOns","filter","event","noteOffs","currentNote","shift","this_1","offIndex","findIndex","note","noteNumber","absoluteTime","noteOff","splice","addNote","durationTicks","midi","noteOffVelocity","velocity","ticks","length","forEach","addCC","number","controllerType","value","addPitchBend","Math","pow","endOfTrackEvent","endOfTrackTicks","undefined","prototype","props","get","Note","Object","assign","insert","cc","ControlChange","Array","isArray","pb","PitchBend","defineProperty","maxDuration","time","duration","i","fromJSON","json","n","toJSON","hasOwnProperty","map","c","exports"],"sources":["/Users/niko/Documents/PAL-Imperator/node_modules/@tonejs/midi/src/Track.ts"],"sourcesContent":["import type {\n\tMidiControllerEvent,\n\tMidiEndOfTrackEvent,\n\tMidiEvent,\n\tMidiNoteOffEvent, MidiNoteOnEvent,\n\tMidiPitchBendEvent, MidiTrackNameEvent\n} from \"midi-file\";\n\n// Used to add `absoluteTime` property to 'MidiEvent's.\ntype WithAbsoluteTime = { absoluteTime: number; };\n\nimport { insert } from \"./BinarySearch\";\nimport { ControlChange, ControlChangeInterface } from \"./ControlChange\";\nimport { ControlChangesJSON, createControlChanges } from \"./ControlChanges\";\nimport { PitchBend, PitchBendInterface, PitchBendJSON } from \"./PitchBend\";\n\nimport { Header } from \"./Header\";\nimport { Instrument, InstrumentJSON } from \"./Instrument\";\nimport { Note, NoteConstructorInterface, NoteJSON } from \"./Note\";\n\nconst privateHeaderMap = new WeakMap<Track, Header>();\n\n/**\n * A Track is a collection of 'notes' and 'controlChanges'.\n */\nexport class Track {\n\t/**\n\t * The name of the track.\n\t */\n\tname = \"\";\n\n\t/**\n\t * The instrument associated with the track.\n\t */\n\tinstrument: Instrument;\n\n\t/**\n\t * The track's note events.\n\t */\n\tnotes: Note[] = [];\n\n\t/**\n\t * The channel number of the track. Applies this channel\n\t * to all events associated with the channel.\n\t */\n\tchannel: number;\n\n\t/**\n\t * The control change events.\n\t */\n\tcontrolChanges = createControlChanges();\n\n\t/**\n\t * The end of track event (if it exists) in ticks.\n\t */\n\tendOfTrackTicks?: number;\n\n\t/**\n\t * The pitch bend events.\n\t */\n\tpitchBends: PitchBend[] = [];\n\n\tconstructor(trackData: MidiEvent[], header: Header) {\n\t\tprivateHeaderMap.set(this, header);\n\n\t\tif (trackData) {\n\t\t\t// Get the name of the track.\n\t\t\tconst nameEvent = trackData.find(\n\t\t\t\t(e) => e.type === \"trackName\"\n\t\t\t) as MidiTrackNameEvent;\n\n\t\t\t// Set empty name if 'trackName' event isn't found.\n\t\t\tthis.name = nameEvent ? nameEvent.text : \"\";\n\t\t}\n\n\t\tthis.instrument = new Instrument(trackData, this);\n\n\t\t// Defaults to 0.\n\t\tthis.channel = 0;\n\n\t\tif (trackData) {\n\t\t\tconst noteOns = trackData.filter(\n\t\t\t\t(event) => event.type === \"noteOn\"\n\t\t\t) as (MidiNoteOnEvent & WithAbsoluteTime)[];\n\n\t\t\tconst noteOffs = trackData.filter(\n\t\t\t\t(event) => event.type === \"noteOff\"\n\t\t\t) as (MidiNoteOffEvent & WithAbsoluteTime)[];\n\n\t\t\twhile (noteOns.length) {\n\t\t\t\tconst currentNote = noteOns.shift();\n\n\t\t\t\t// Set the channel based on the note.\n\t\t\t\tthis.channel = currentNote.channel;\n\n\t\t\t\t// Find the corresponding note off.\n\t\t\t\tconst offIndex = noteOffs.findIndex(\n\t\t\t\t\t(note) =>\n\t\t\t\t\t\tnote.noteNumber === currentNote.noteNumber &&\n\t\t\t\t\t\tnote.absoluteTime >= currentNote.absoluteTime\n\t\t\t\t);\n\n\t\t\t\tif (offIndex !== -1) {\n\t\t\t\t\t// Once it's got the note off, add it.\n\t\t\t\t\tconst noteOff = noteOffs.splice(offIndex, 1)[0];\n\n\t\t\t\t\tthis.addNote({\n\t\t\t\t\t\tdurationTicks:\n\t\t\t\t\t\t\tnoteOff.absoluteTime - currentNote.absoluteTime,\n\t\t\t\t\t\tmidi: currentNote.noteNumber,\n\t\t\t\t\t\tnoteOffVelocity: noteOff.velocity / 127,\n\t\t\t\t\t\tticks: currentNote.absoluteTime,\n\t\t\t\t\t\tvelocity: currentNote.velocity / 127,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst controlChanges = trackData.filter(\n\t\t\t\t(event) => event.type === \"controller\"\n\t\t\t) as (MidiControllerEvent & WithAbsoluteTime)[];\n\t\t\tcontrolChanges.forEach((event) => {\n\t\t\t\tthis.addCC({\n\t\t\t\t\tnumber: event.controllerType,\n\t\t\t\t\tticks: event.absoluteTime,\n\t\t\t\t\tvalue: event.value / 127,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst pitchBends = trackData.filter(\n\t\t\t\t(event) => event.type === \"pitchBend\"\n\t\t\t) as (MidiPitchBendEvent & WithAbsoluteTime)[];\n\t\t\tpitchBends.forEach((event) => {\n\t\t\t\tthis.addPitchBend({\n\t\t\t\t\tticks: event.absoluteTime,\n\t\t\t\t\t// Scale the value between -2^13 to 2^13 to -2 to 2.\n\t\t\t\t\tvalue: event.value / Math.pow(2, 13),\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst endOfTrackEvent:\n\t\t\t| (MidiEndOfTrackEvent & WithAbsoluteTime)\n\t\t\t| undefined = trackData.find(\n\t\t\t\t(event): event is (MidiEndOfTrackEvent & WithAbsoluteTime) =>\n\t\t\t\t\tevent.type === \"endOfTrack\"\n\t\t\t);\n\n\t\t\tthis.endOfTrackTicks =\n\t\t\t\tendOfTrackEvent !== undefined\n\t\t\t\t\t? endOfTrackEvent.absoluteTime\n\t\t\t\t\t: undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Add a note to the notes array.\n\t * @param props The note properties to add.\n\t */\n\taddNote(props: NoteConstructorInterface): this {\n\t\tconst header = privateHeaderMap.get(this);\n\t\tconst note = new Note(\n\t\t\t{\n\t\t\t\tmidi: 0,\n\t\t\t\tticks: 0,\n\t\t\t\tvelocity: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tticks: 0,\n\t\t\t\tvelocity: 0,\n\t\t\t},\n\t\t\theader\n\t\t);\n\n\t\tObject.assign(note, props);\n\t\tinsert(this.notes, note, \"ticks\");\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a control change to the track.\n\t * @param props\n\t */\n\taddCC(\n\t\tprops:\n\t\t| Omit<ControlChangeInterface, \"ticks\">\n\t\t| Omit<ControlChangeInterface, \"time\">\n\t): this {\n\t\tconst header = privateHeaderMap.get(this);\n\t\tconst cc = new ControlChange(\n\t\t\t{\n\t\t\t\tcontrollerType: props.number,\n\t\t\t},\n\t\t\theader\n\t\t);\n\t\tdelete props.number;\n\t\tObject.assign(cc, props);\n\t\tif (!Array.isArray(this.controlChanges[cc.number])) {\n\t\t\tthis.controlChanges[cc.number] = [];\n\t\t}\n\t\tinsert(this.controlChanges[cc.number], cc, \"ticks\");\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a control change to the track.\n\t */\n\taddPitchBend(\n\t\tprops:\n\t\t| Omit<PitchBendInterface, \"ticks\">\n\t\t| Omit<PitchBendInterface, \"time\">\n\t): this {\n\t\tconst header = privateHeaderMap.get(this);\n\t\tconst pb = new PitchBend({}, header);\n\t\tObject.assign(pb, props);\n\t\tinsert(this.pitchBends, pb, \"ticks\");\n\t\treturn this;\n\t}\n\n\t/**\n\t * The end time of the last event in the track.\n\t */\n\tget duration(): number {\n\t\tif (!this.notes.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet maxDuration =\n\t\t\tthis.notes[this.notes.length - 1].time +\n\t\t\tthis.notes[this.notes.length - 1].duration;\n\n\t\tfor (let i = 0; i < this.notes.length - 1; i++) {\n\t\t\tconst duration = this.notes[i].time + this.notes[i].duration;\n\t\t\tif (maxDuration < duration) {\n\t\t\t\tmaxDuration = duration;\n\t\t\t}\n\t\t}\n\n\t\treturn maxDuration;\n\t}\n\n\t/**\n\t * The end time of the last event in the track in ticks.\n\t */\n\tget durationTicks(): number {\n\t\tif (!this.notes.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet maxDuration =\n\t\t\tthis.notes[this.notes.length - 1].ticks +\n\t\t\tthis.notes[this.notes.length - 1].durationTicks;\n\t\tfor (let i = 0; i < this.notes.length - 1; i++) {\n\t\t\tconst duration = this.notes[i].ticks + this.notes[i].durationTicks;\n\t\t\tif (maxDuration < duration) {\n\t\t\t\tmaxDuration = duration;\n\t\t\t}\n\t\t}\n\n\t\treturn maxDuration;\n\t}\n\n\t/**\n\t * Assign the JSON values to this track.\n\t */\n\tfromJSON(json: TrackJSON): void {\n\t\tthis.name = json.name;\n\t\tthis.channel = json.channel;\n\t\tthis.instrument = new Instrument(undefined, this);\n\t\tthis.instrument.fromJSON(json.instrument);\n\n\t\tif (json.endOfTrackTicks !== undefined) {\n\t\t\tthis.endOfTrackTicks = json.endOfTrackTicks;\n\t\t}\n\n\t\tfor (const number in json.controlChanges) {\n\t\t\tif (json.controlChanges[number]) {\n\t\t\t\tjson.controlChanges[number].forEach((cc) => {\n\t\t\t\t\tthis.addCC({\n\t\t\t\t\t\tnumber: cc.number,\n\t\t\t\t\t\tticks: cc.ticks,\n\t\t\t\t\t\tvalue: cc.value,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tjson.notes.forEach((n) => {\n\t\t\tthis.addNote({\n\t\t\t\tdurationTicks: n.durationTicks,\n\t\t\t\tmidi: n.midi,\n\t\t\t\tticks: n.ticks,\n\t\t\t\tvelocity: n.velocity,\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Convert the track into a JSON format.\n\t */\n\ttoJSON(): TrackJSON {\n\t\t// Convert all the CCs to JSON.\n\t\tconst controlChanges = {};\n\t\tfor (let i = 0; i < 127; i++) {\n\t\t\tif (this.controlChanges.hasOwnProperty(i)) {\n\t\t\t\tcontrolChanges[i] = this.controlChanges[i].map((c) =>\n\t\t\t\t\tc.toJSON()\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst json: TrackJSON = {\n\t\t\tchannel: this.channel,\n\t\t\tcontrolChanges,\n\t\t\tpitchBends: this.pitchBends.map((pb) => pb.toJSON()),\n\t\t\tinstrument: this.instrument.toJSON(),\n\t\t\tname: this.name,\n\t\t\tnotes: this.notes.map((n) => n.toJSON()),\n\t\t};\n\n\t\tif (this.endOfTrackTicks !== undefined) {\n\t\t\tjson.endOfTrackTicks = this.endOfTrackTicks;\n\t\t}\n\n\t\treturn json;\n\t}\n}\n\nexport interface TrackJSON {\n\tname: string;\n\tnotes: NoteJSON[];\n\tchannel: number;\n\tinstrument: InstrumentJSON;\n\tcontrolChanges: ControlChangesJSON;\n\tpitchBends: PitchBendJSON[];\n\tendOfTrackTicks?: number;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}