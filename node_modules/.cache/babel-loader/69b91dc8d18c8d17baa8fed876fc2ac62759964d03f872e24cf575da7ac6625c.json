{"ast":null,"code":"var _jsxFileName = \"/Users/niko/Documents/PAL-Imperator/src/components/CommandInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { extractMidiFromAudio } from '../utils/midiExtractor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommandInterface = ({\n  mode,\n  file\n}) => {\n  _s();\n  const [isExtracting, setIsExtracting] = useState(false);\n  const handleExtractMidi = async () => {\n    if (file) {\n      setIsExtracting(true);\n      try {\n        const midiBlob = await extractMidiFromAudio(file);\n        const url = URL.createObjectURL(midiBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `${file.name.split('.').slice(0, -1).join('.')}-extracted-midi.mid`;\n        link.click();\n        URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Error extracting MIDI:', error);\n      } finally {\n        setIsExtracting(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mode === 'Music' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExtractMidi,\n      disabled: !file || isExtracting,\n      children: isExtracting ? 'Extracting...' : 'Extract MIDI'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandInterface, \"Lcl26pUXyhKfWVTrhRUDulwW1KE=\");\n_c = CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","extractMidiFromAudio","jsxDEV","_jsxDEV","CommandInterface","mode","file","_s","isExtracting","setIsExtracting","handleExtractMidi","midiBlob","url","URL","createObjectURL","link","document","createElement","href","download","name","split","slice","join","click","revokeObjectURL","error","console","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/niko/Documents/PAL-Imperator/src/components/CommandInterface.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { extractMidiFromAudio } from '../utils/midiExtractor';\n\ninterface CommandInterfaceProps {\n  mode: 'Music' | 'Literature' | 'Other';\n  file: File | null;\n}\n\nexport const CommandInterface: React.FC<CommandInterfaceProps> = ({ mode, file }) => {\n  const [isExtracting, setIsExtracting] = useState(false);\n\n  const handleExtractMidi = async () => {\n    if (file) {\n      setIsExtracting(true);\n      try {\n        const midiBlob = await extractMidiFromAudio(file);\n        const url = URL.createObjectURL(midiBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `${file.name.split('.').slice(0, -1).join('.')}-extracted-midi.mid`;\n        link.click();\n        URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Error extracting MIDI:', error);\n      } finally {\n        setIsExtracting(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      {mode === 'Music' && (\n        <button onClick={handleExtractMidi} disabled={!file || isExtracting}>\n          {isExtracting ? 'Extracting...' : 'Extract MIDI'}\n        </button>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9D,OAAO,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIJ,IAAI,EAAE;MACRG,eAAe,CAAC,IAAI,CAAC;MACrB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMV,oBAAoB,CAACK,IAAI,CAAC;QACjD,MAAMM,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACH,QAAQ,CAAC;QACzC,MAAMI,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;QACfG,IAAI,CAACI,QAAQ,GAAG,GAAGb,IAAI,CAACc,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,qBAAqB;QACnFR,IAAI,CAACS,KAAK,CAAC,CAAC;QACZX,GAAG,CAACY,eAAe,CAACb,GAAG,CAAC;MAC1B,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRjB,eAAe,CAAC,KAAK,CAAC;MACxB;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAAyB,QAAA,EACGvB,IAAI,KAAK,OAAO,iBACfF,OAAA;MAAQ0B,OAAO,EAAEnB,iBAAkB;MAACoB,QAAQ,EAAE,CAACxB,IAAI,IAAIE,YAAa;MAAAoB,QAAA,EACjEpB,YAAY,GAAG,eAAe,GAAG;IAAc;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/BWH,gBAAiD;AAAA+B,EAAA,GAAjD/B,gBAAiD;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}